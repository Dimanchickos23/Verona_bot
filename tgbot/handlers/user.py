import asyncio
import logging

from aiogram import Dispatcher, Bot, types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hlink

from tgbot.config import Config
from tgbot.infrastructure.database.functions import delete_user
from tgbot.keyboards.inline import chat_cb
from tgbot.misc import Survey


async def user_join(join: types.ChatJoinRequest):
    # —Ç—É—Ç –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —é–∑–µ—Ä–∞ –≤ –∫–∞–Ω–∞–ª
    await join.approve()
    # –¢—É—Ç –Ω–∞–¥–æ –∑–∞–Ω–µ—Å—Ç–∏ –≤ –ë–î

    bot = Bot.get_current()

    # –∞ —Ç—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    chat_id = join.chat.id
    chat_name = join.chat.full_name
    start_survey_button = InlineKeyboardButton(text="üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É",
                                               callback_data=chat_cb.new(chat_id=chat_id,
                                                                         chat_name=str(chat_name),
                                                                         action='start_survey')
                                               )

    survey_keyboard = InlineKeyboardMarkup(row_width=1)
    survey_keyboard.insert(start_survey_button)

    await bot.send_message(chat_id=join.from_user.id, reply_markup=survey_keyboard,
                           text="–ü—Ä–∏–≤–µ—Ç! \n\n"
                                "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∫–∞—Å—Ç–∏–Ω–≥-–ø—Ä–æ—Å–º–æ—Ç—Ä–∞, —Ç–µ–ø–µ—Ä—å –í—ã "
                                "—á–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –º–æ–¥–µ–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ VERONA! \n\n"
                                "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å "
                                "–≤ –∫–∞—Å—Ç–∏–Ω–≥–∞—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ "
                                "–≤—ã—Å–ª–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –º–æ–¥–µ–ª–µ–π.")


# –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
async def user_left(m: types.ChatMember, session):
    logging.info(f"{m.user.id}")
    await delete_user(session, m.user.id)
    bot = Bot.get_current()
    config: Config = bot.get('config')
    admin = config.tg_bot.admin_ids[0]
    await bot.send_message(admin, hlink(f"{m.user.full_name}", f"tg://user?id={m.user.id}") +
                           f" –≤—ã—à–µ–ª –∏–∑ –∫–∞–Ω–∞–ª–∞")


async def start_survey(cb: CallbackQuery, state: FSMContext, callback_data: dict):
    await cb.answer()
    await cb.message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    await Survey.FIO.set()
    chat_id = callback_data['chat_id']
    chat_name = callback_data['chat_name']
    # await cb.message.answer(f"–ê–π–¥–∏ —á–∞—Ç–∞ -- {chat_id}\n"
    #                         f"–ò–º—è —á–∞—Ç–∞ -- {chat_name}")
    await state.update_data(chat_id=str(chat_id), chat_name=str(chat_name))


def register_user(dp: Dispatcher):
    dp.register_chat_join_request_handler(user_join, state="*")
    dp.register_callback_query_handler(start_survey, chat_cb.filter(action='start_survey'))
    dp.chat_member_handler(user_left, state="*")
